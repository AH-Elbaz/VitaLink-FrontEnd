<<<<<<< HEAD
# 🚀 Build and deploy a Next.js / Node.js front-end app to Azure Web App
# Docs: https://github.com/Azure/webapps-deploy
# Author: ChatGPT (optimized for low storage)

name: Build and deploy Node.js front-end app to Azure Web App - vitalink

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # required for actions/checkout

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build --if-present

      - name: 📤 Export static files (reduce package size)
        run: |
          if [ -f package.json ] && grep -q '"export"' package.json; then
            npm run export
          else
            mkdir -p out && cp -r public/* out/ || true
          fi

      - name: 🧹 Clean unnecessary files before upload
        run: |
          rm -rf node_modules
          rm -rf .next/cache || true
          rm -rf tmp || true

      - name: 📦 Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write # required for JWT
      contents: read # required for checkout

    steps:
      - name: 📥 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./out

      - name: 🔐 Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_ED3CD9D9CDE8421286506CB28E7471ED }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_234A0AFA252D49A6B1FFCC1A57BD002C }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1E54A3930B0247A7BF2961909C0CF35A }}

      - name: 🧼 Free up disk space (prevent "not enough space" error)
        run: |
          echo "Cleaning temp folders..."
          rm -rf /tmp/* || true
          rm -rf $HOME/.npm || true
          rm -rf $HOME/.cache || true

      - name: 🚀 Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'vitalink'
          slot-name: 'Production'
          package: ./out
=======
# 🚀 Build and deploy a Next.js / Node.js front-end app to Azure Web App
# Docs: https://github.com/Azure/webapps-deploy
# Author: ChatGPT (optimized for low storage)

name: Build and deploy Node.js front-end app to Azure Web App - vitalink

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # required for actions/checkout

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build --if-present

      - name: 📤 Export static files (reduce package size)
        run: |
          if [ -f package.json ] && grep -q '"export"' package.json; then
            npm run export
          else
            mkdir -p out && cp -r public/* out/ || true
          fi

      - name: 🧹 Clean unnecessary files before upload
        run: |
          rm -rf node_modules
          rm -rf .next/cache || true
          rm -rf tmp || true

      - name: 📦 Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write # required for JWT
      contents: read # required for checkout

    steps:
      - name: 📥 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./out

      - name: 🔐 Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_ED3CD9D9CDE8421286506CB28E7471ED }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_234A0AFA252D49A6B1FFCC1A57BD002C }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1E54A3930B0247A7BF2961909C0CF35A }}

      - name: 🧼 Free up disk space (prevent "not enough space" error)
        run: |
          echo "Cleaning temp folders..."
          rm -rf /tmp/* || true
          rm -rf $HOME/.npm || true
          rm -rf $HOME/.cache || true

      - name: 🚀 Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'vitalink'
          slot-name: 'Production'
          package: ./out
>>>>>>> 32f454d55a7577d1e7f975c76c42db847b122e02
